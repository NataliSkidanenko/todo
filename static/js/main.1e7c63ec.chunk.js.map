{"version":3,"sources":["rdx/filter/filter-reducer.js","rdx/filter/filter-selectors.js","rdx/filter/filter-actions.js","components/Filters.jsx","components/ToDoList.jsx","rdx/todo/todo-selectors.js","rdx/todo/todo-actions.js","components/Form.jsx","App.js","data.js","rdx/todo/todo-reducer.js","rdx/locale-storage.js","rdx/root-store.js","index.js"],"names":["filterTypes","selectFilter","state","filter","setFilter","type","Filters","activeFilter","useSelector","dispatch","useDispatch","all","active","complited","className","onClick","ToDoList","todo","todos","isDone","selectVisibleTodos","list","useRef","ref","length","map","id","title","toggleTodo","removeTodo","width","height","viewBox","fill","xmlns","d","current","scrollTop","scrollHeight","Form","onSubmit","e","preventDefault","target","task","value","reset","name","placeholder","App","preloadedTodos","localStorage","getItem","staticTodo","JSON","parse","error","getTodosFromLocalStorage","rootReducer","combineReducers","action","Date","now","store","configureStore","reducer","subscribe","savedTodos","stringify","setItem","console","log","saveTodosToLocalStorage","getState","rootElement","document","getElementById","createRoot","render"],"mappings":"mJAAaA,G,MAAoB,OAApBA,EAAmC,SAAnCA,EAAwD,YCAxDC,EAAe,SAACC,GAAK,OAAKA,EAAMC,MAAO,ECAvCC,EAAY,SAACD,GAAM,MAAM,CACpCE,KAAM,aACNF,SACD,E,OCEc,SAASG,IACpB,IAAMC,EAAeC,YAAYP,GAC3BQ,EAAWC,cACVC,EAA0BX,EAArBY,EAAqBZ,EAAba,EAAab,EAEjC,OACI,sBAAKc,UAAU,UAAS,UACpB,wBACIC,QAAS,kBAAMN,EAASL,EAAUO,GAAK,EACvCG,UAAWP,IAAiBI,EAAM,SAAW,GAAG,SAAC,QAGrD,wBACII,QAAS,kBAAMN,EAASL,EAAUQ,GAAQ,EAC1CE,UAAWP,IAAiBK,EAAS,SAAW,GAAG,SAAC,WAGxD,wBACIG,QAAS,kBAAMN,EAASL,EAAUS,GAAW,EAC7CC,UAAWP,IAAiBM,EAAY,SAAW,GAAG,SAAC,gBAKvE,CCrBe,SAASG,IACpB,IAAMT,EAAeC,YAAYP,GAC1BU,EAA0BX,EAArBY,EAAqBZ,EAAba,EAAab,EAC3BiB,EAAOT,aAAY,SAACN,GAAK,OCPD,SAACA,EAAOC,GACtC,OAAQA,GACJ,KAAKH,EACD,OAAOE,EAAMgB,MAGjB,KAAKlB,EACD,OAAOE,EAAMgB,MAAMf,QAAO,SAACc,GAAI,OAAMA,EAAKE,MAAM,IAGpD,KAAKnB,EACD,OAAOE,EAAMgB,MAAMf,QAAO,SAACc,GAAI,OAAKA,EAAKE,MAAM,IAGnD,QACI,OAAOjB,EAAMgB,MAGzB,CDXwCE,CAAmBlB,EAAOK,EAAa,IACrEE,EAAWC,cACXW,EAAOC,mBAMb,OACI,qCACI,cAAChB,EAAO,IACR,qBAAIiB,IAAKF,EAAMP,UAAU,OAAM,UAC1BG,EAAKO,OAAS,GACXP,EAAKQ,KAAI,gBAAEC,EAAE,EAAFA,GAAIC,EAAK,EAALA,MAAOR,EAAM,EAANA,OAAM,OACxB,qBACIJ,QAAS,kBAAMN,EEhBjB,SAACiB,GAAE,MAAM,CACjCrB,KAAM,cACNqB,KACD,CFamDE,CAAWF,GAAI,EACvCZ,UAAS,eAAUK,EAAS,OAAS,IAAK,UAE1C,4BAAIQ,IACJ,qBACIZ,QAAS,kBAAMN,EE1BrB,SAACiB,GAAE,MAAM,CACjCrB,KAAM,cACNqB,KACD,CFuBuDG,CAAWH,GAAI,EACvCI,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAA4B,SAClC,sBACIC,EAAE,shBACFF,KAAK,gBAXRP,EAcJ,IAGI,IAAhBT,EAAKO,QAAgBjB,IAAiBI,GACnC,mBAAGG,UAAU,UAAS,SAAC,wCAEV,IAAhBG,EAAKO,QAAgBjB,IAAiBK,GACnC,mBAAGE,UAAU,UAAS,SAAC,8BAEV,IAAhBG,EAAKO,QAAgBjB,IAAiBM,GACnC,mBAAGC,UAAU,UAAS,SAAC,iCAE1BG,EAAKO,QAAU,GACZ,wBAAQV,UAAU,SAASC,QAxCxB,WACfM,EAAKe,QAAQC,UAAYhB,EAAKe,QAAQE,YAC1C,EAsC+D,SAAC,qBAOpE,CGvDe,SAASC,IACpB,IAAM9B,EAAWC,cACXH,EAAeC,YAAYP,GACrBW,EAAqBZ,EAAba,EAAab,EAUjC,OACI,uBAAMc,UAAU,OAAO0B,SAVN,SAACC,GAClBA,EAAEC,iBACFjC,EDb2B,CACjCJ,KAAM,WACNsB,MCWuBc,EAAEE,OAAOC,KAAKC,QAC/BJ,EAAEE,OAAOG,QACLvC,IAAiBM,GACjBJ,EAASL,EAAUQ,GAE3B,EAGkD,UAC1C,uBACIE,UAAU,aACVT,KAAK,OACL0C,KAAK,OACLC,YAAY,wBAEhB,wBAAQlC,UAAU,aAAY,SAAC,qBAG3C,CC1Be,SAASmC,IACtB,OACE,qBAAKnC,UAAU,MAAK,SAClB,qBAAKA,UAAU,UAAS,SACtB,sBAAKA,UAAU,YAAW,UACxB,oBAAIA,UAAU,QAAO,SAAC,eACtB,cAACE,EAAQ,IACT,cAACuB,EAAI,UAKf,C,kCCjBatB,EAAO,CAClB,CAAES,GAAI,IAAKC,MAAO,gBAAiBR,QAAQ,GAC3C,CAAEO,GAAI,IAAKC,MAAO,mBAAoBR,QAAQ,GAC9C,CAAEO,GAAI,IAAKC,MAAO,6BAA8BR,QAAQ,GACxD,CAAEO,GAAI,IAAKC,MAAO,YAAaR,QAAQ,GACvC,CAAEO,GAAI,IAAKC,MAAO,uBAAwBR,QAAQ,ICH9C+B,ECAkC,WACtC,IACE,IAAMjC,EAAOkC,aAAaC,QAAQ,SAClC,OAAa,OAATnC,EACKoC,EAEFC,KAAKC,MAAMtC,EAGpB,CAFE,MAAOuC,GACP,OAAOH,CACT,CACF,CDVuBI,GEIjBC,EAAcC,YAAgB,CAAEzC,MFFjB,WAAqC,IAApChB,EAAK,uDAAGgD,EAAgBU,EAAM,uCAChD,OAAQA,EAAOvD,MACX,IAAK,WACD,MAAM,CAAE,CAACqB,GAAImC,KAAKC,MAAOnC,MAAOiC,EAAOjC,MAAOR,QAAQ,IAAM,mBAAKjB,IAGrE,IAAK,cACD,OAAOA,EAAMC,QAAO,SAACc,GAAI,OAAKA,EAAKS,KAAOkC,EAAOlC,EAAE,IAGvD,IAAK,cACD,OAAOxB,EAAMuB,KAAI,SAACR,GAAI,OAClBA,EAAKS,KAAOkC,EAAOlC,GAAE,2BAAOT,GAAI,IAAEE,QAASF,EAAKE,SAAUF,CAAI,IAItE,QACI,OAAOf,EAGnB,EElB6CC,OZJvB,WAAsC,IAArCD,EAAK,uDAAGF,EAAiB4D,EAAM,uCAClD,MACS,eADDA,EAAOvD,KAEAuD,EAAOzD,OAIPD,CAGnB,IYLa6D,EAAQC,YAAe,CAClCC,QAASP,IAGXK,EAAMG,WAAU,YDGuB,SAAChD,GACtC,IACE,IAAMiD,EAAab,KAAKc,UAAUlD,GAClCiC,aAAakB,QAAQ,QAASF,EAGhC,CAFE,MAAOX,GACPc,QAAQC,IAAIf,EACd,CACF,CCTEgB,CAAwBT,EAAMU,WAAWvD,OACzCoD,QAAQC,IAAIpB,aAAaC,QAAQ,SACnC,ICRA,IAAMsB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,IAAQ,CAACf,MAAOA,EAAM,SACrB,cAACd,EAAG,Q","file":"static/js/main.1e7c63ec.chunk.js","sourcesContent":["export const filterTypes = {all: 'ALL', active: 'ACTIVE', complited: 'COMPLITED'};\n\nexport const filter = (state = filterTypes.all, action) => {\n    switch (action.type) {\n        case 'SET_FILTER': {\n            return action.filter;\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","export const selectFilter = (state) => state.filter;\n","export const setFilter = (filter) => ({\n  type: \"SET_FILTER\",\n  filter\n});\n","import {useDispatch, useSelector} from 'react-redux';\nimport {setFilter} from '../rdx/filter/filter-actions';\nimport {selectFilter} from '../rdx/filter/filter-selectors';\nimport {filterTypes} from '../rdx/filter/filter-reducer';\n\nexport default function Filters() {\n    const activeFilter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const {all, active, complited} = filterTypes;\n\n    return (\n        <div className=\"filters\">\n            <button\n                onClick={() => dispatch(setFilter(all))}\n                className={activeFilter === all ? 'active' : ''}>\n                All\n            </button>\n            <button\n                onClick={() => dispatch(setFilter(active))}\n                className={activeFilter === active ? 'active' : ''}>\n                Active\n            </button>\n            <button\n                onClick={() => dispatch(setFilter(complited))}\n                className={activeFilter === complited ? 'active' : ''}>\n                Complited\n            </button>\n        </div>\n    );\n}\n","import {useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {filterTypes} from '../rdx/filter/filter-reducer';\nimport {selectFilter} from '../rdx/filter/filter-selectors';\nimport {removeTodo, toggleTodo} from '../rdx/todo/todo-actions';\nimport {selectVisibleTodos} from '../rdx/todo/todo-selectors';\nimport Filters from './Filters';\n\nexport default function ToDoList() {\n    const activeFilter = useSelector(selectFilter);\n    const {all, active, complited} = filterTypes;\n    const todo = useSelector((state) => selectVisibleTodos(state, activeFilter));\n    const dispatch = useDispatch();\n    const list = useRef();\n\n    const scrollDown = () => {\n        list.current.scrollTop = list.current.scrollHeight;\n    };\n\n    return (\n        <>\n            <Filters />\n            <ul ref={list} className=\"list\">\n                {todo.length > 0 &&\n                    todo.map(({id, title, isDone}) => (\n                        <li\n                            onClick={() => dispatch(toggleTodo(id))}\n                            className={`task ${isDone ? 'done' : ''}`}\n                            key={id}>\n                            <p>{title}</p>\n                            <svg\n                                onClick={() => dispatch(removeTodo(id))}\n                                width=\"12\"\n                                height=\"13\"\n                                viewBox=\"0 0 12 13\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\">\n                                <path\n                                    d=\"M7.41421 6.5L11.7071 10.7929C12.0976 11.1834 12.0976 11.8166 11.7071 12.2071C11.3166 12.5976 10.6834 12.5976 10.2929 12.2071L6 7.91421L1.70711 12.2071C1.31658 12.5976 0.683418 12.5976 0.292893 12.2071C-0.0976311 11.8166 -0.0976311 11.1834 0.292893 10.7929L4.58579 6.5L0.292893 2.20711C-0.0976311 1.81658 -0.0976311 1.18342 0.292893 0.792893C0.683418 0.402369 1.31658 0.402369 1.70711 0.792893L6 5.08579L10.2929 0.792893C10.6834 0.402369 11.3166 0.402369 11.7071 0.792893C12.0976 1.18342 12.0976 1.81658 11.7071 2.20711L7.41421 6.5Z\"\n                                    fill=\"#BDBDBD\"\n                                />\n                            </svg>\n                        </li>\n                    ))}\n\n                {todo.length === 0 && activeFilter === all && (\n                    <p className=\"message\">Add some tasks using the form below</p>\n                )}\n                {todo.length === 0 && activeFilter === active && (\n                    <p className=\"message\">There are no active tasks</p>\n                )}\n                {todo.length === 0 && activeFilter === complited && (\n                    <p className=\"message\">There are no completed tasks</p>\n                )}\n                {todo.length >= 5 && (\n                    <button className=\"scroll\" onClick={scrollDown}>\n                        Scroll down\n                    </button>\n                )}\n            </ul>\n        </>\n    );\n}\n","import {filterTypes} from '../filter/filter-reducer';\n\nexport const selectAllTodos = (state) => state.todos;\n\nexport const selectVisibleTodos = (state, filter) => {\n    switch (filter) {\n        case filterTypes.all: {\n            return state.todos;\n        }\n\n        case filterTypes.active: {\n            return state.todos.filter((todo) => !todo.isDone);\n        }\n\n        case filterTypes.complited: {\n            return state.todos.filter((todo) => todo.isDone);\n        }\n\n        default: {\n            return state.todos;\n        }\n    }\n};\n","export const addTodo = (title) => ({\n  type: \"ADD_TODO\",\n  title\n});\n\nexport const removeTodo = (id) => ({\n  type: \"REMOVE_TODO\",\n  id\n});\n\nexport const toggleTodo = (id) => ({\n  type: \"TOGGLE_TODO\",\n  id\n});\n","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setFilter} from '../rdx/filter/filter-actions';\nimport {filterTypes} from '../rdx/filter/filter-reducer';\nimport {selectFilter} from '../rdx/filter/filter-selectors';\nimport {addTodo} from '../rdx/todo/todo-actions';\n\nexport default function Form() {\n    const dispatch = useDispatch();\n    const activeFilter = useSelector(selectFilter);\n    const {all, active, complited} = filterTypes;\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(addTodo(e.target.task.value));\n        e.target.reset();\n        if (activeFilter === complited) {\n            dispatch(setFilter(active));\n        }\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <input\n                className=\"task-input\"\n                type=\"text\"\n                name=\"task\"\n                placeholder=\"Enter your new task\"\n            />\n            <button className=\"add-button\">Add a new task</button>\n        </form>\n    );\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport ToDoList from \"./components/ToDoList\";\nimport Form from \"./components/Form\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <h1 className=\"title\">Need to do</h1>\n          <ToDoList />\n          <Form />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const todo = [\n  { id: \"0\", title: \"Buy Groceries\", isDone: false },\n  { id: \"1\", title: \"Dinner with Kate\", isDone: true },\n  { id: \"2\", title: \"Create light and dark mode\", isDone: true },\n  { id: \"3\", title: \"Pay bills\", isDone: false },\n  { id: \"4\", title: \"Outings with friends\", isDone: false }\n];\n","import {getTodosFromLocalStorage} from '../locale-storage';\n\nconst preloadedTodos = getTodosFromLocalStorage();\n\nexport const todos = (state = preloadedTodos, action) => {\n    switch (action.type) {\n        case 'ADD_TODO': {\n            return [{id: Date.now(), title: action.title, isDone: false}, ...state];\n        }\n\n        case 'REMOVE_TODO': {\n            return state.filter((todo) => todo.id !== action.id);\n        }\n\n        case 'TOGGLE_TODO': {\n            return state.map((todo) =>\n                todo.id === action.id ? {...todo, isDone: !todo.isDone} : todo\n            );\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import { todo as staticTodo } from \"../data\";\n\nexport const getTodosFromLocalStorage = () => {\n  try {\n    const todo = localStorage.getItem(\"todos\");\n    if (todo === null) {\n      return staticTodo;\n    }\n    return JSON.parse(todo);\n  } catch (error) {\n    return staticTodo;\n  }\n};\n\nexport const saveTodosToLocalStorage = (todos) => {\n  try {\n    const savedTodos = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", savedTodos);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { todos } from \"./todo/todo-reducer\";\nimport { filter } from \"./filter/filter-reducer\";\nimport { saveTodosToLocalStorage } from \"./locale-storage\";\n\nconst rootReducer = combineReducers({ todos, filter });\nexport const store = configureStore({\n  reducer: rootReducer\n});\n\nstore.subscribe(() => {\n  saveTodosToLocalStorage(store.getState().todos);\n  console.log(localStorage.getItem(\"todos\"));\n});\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./rdx/root-store\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}